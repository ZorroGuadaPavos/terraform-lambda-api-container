name: Deploy App

on:
  push:
    branches: 
      - main
    paths:
      - 'app/**'
      - 'terraform/**'
      - '.github/**'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'main'
        type: string
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'prd'
        type: choice
        options:
          - prd
          - dev
      destroy:
        description: 'Destroy the environment'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Run in plan-only mode (no apply)'
        required: false
        default: false
        type: boolean

jobs:
  deploy_dev:
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    uses: ./.github/workflows/terraform-pipeline.yml
    with:
      environment: 'dev'
      destroy: ${{ github.event.inputs.destroy }}
      dry_run: ${{ github.event.inputs.dry_run }}

  plan_prd:
    needs: deploy_dev
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prd')
    uses: ./.github/workflows/terraform-pipeline.yml
    with:
      environment: 'prd'
      destroy: ${{ github.event.inputs.destroy }}
      dry_run: true

  approve_prd:
    needs: plan_prd
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prd')
    runs-on: ubuntu-latest
    steps:
      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: albervico@hotmail.com,4ndres.or@gmail.com #${{ secrets.PRD_APPROVERS }}
          minimum-approvals: 1
          issue-title: "Approve Production Deployment"
          issue-body: |
            A production deployment is pending approval.
            
            Terraform Plan:
            ```
            ${{ needs.plan_prd.outputs.terraform.outputs.plan_output }}
            ```
            
            To approve, comment with `/approve`
            To reject, comment with `/reject`

  deploy_prd:
    needs: [deploy_dev, approve_prd]
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prd')
    uses: ./.github/workflows/terraform-pipeline.yml
    with:
      environment: 'prd'
      destroy: ${{ github.event.inputs.destroy }}
      dry_run: false